{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/album-list/album-list.component.ts","./src/app/components/album-list/album-list.component.html","./src/app/components/form/form.component.ts","./src/app/components/form/form.component.html","./src/app/components/pokemon-form/pokemon-form.component.ts","./src/app/components/pokemon-form/pokemon-form.component.html","./src/app/components/pokemon/pokemon.component.ts","./src/app/components/pokemon/pokemon.component.html","./src/app/mat/mat.module.ts","./src/app/pipes/pokemon-abilities.pipe.ts","./src/app/services/albums.service.ts","./src/app/services/pokemon-firestore.service.ts","./src/app/services/pokemon.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AlbumListComponent } from './components/album-list/album-list.component';\n\nimport { PokemonComponent } from './components/pokemon/pokemon.component';\n\n\nconst routes: Routes = [\n  {path: 'albums', component: AlbumListComponent},\n  {path: 'pokemon', component: PokemonComponent},\n  {path: '', pathMatch: 'full', redirectTo: 'albums'},\n  {path: '**', pathMatch: 'full', redirectTo: 'albums'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'homework5';\n}\n","<div class=\"nav\">\n    <mat-toolbar color=\"primary\">\n        <mat-toolbar-row>\n            <button (click)=\"sidenav.toggle()\" mat-icon-button>\n                <mat-icon>menu</mat-icon>\n            </button>\n            <span>Homework 5</span>\n        </mat-toolbar-row>\n    </mat-toolbar>\n\n    <mat-sidenav-container>\n        <mat-sidenav #sidenav>\n            <mat-nav-list>\n                <a (click)=\"sidenav.toggle()\" href=\"\" mat-list-item>Close</a>\n                <a (click)=\"sidenav.toggle()\" mat-list-item routerLink=\"/albums\">Albums</a>\n                <a (click)=\"sidenav.toggle()\" mat-list-item routerLink=\"/pokemon\">Pokemons</a>\n\n            </mat-nav-list>\n        </mat-sidenav>\n        <mat-sidenav-content>\n            <router-outlet></router-outlet>\n        </mat-sidenav-content>\n    </mat-sidenav-container>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatModule } from './mat/mat.module';\nimport { AlbumListComponent } from './components/album-list/album-list.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AlbumsService } from './services/albums.service';\nimport { environment } from '../environments/environment';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { FormComponent } from './components/form/form.component';\nimport {HttpClientModule } from '@angular/common/http';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { PokemonComponent } from './components/pokemon/pokemon.component';\nimport { PokemonService } from './services/pokemon.service';\nimport { PokemonAbilitiesPipe } from './pipes/pokemon-abilities.pipe';\nimport { PokemonFormComponent } from './components/pokemon-form/pokemon-form.component';\nimport { PokemonFirestoreService } from './services/pokemon-firestore.service';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        AlbumListComponent,\n        FormComponent,\n        PokemonComponent,\n        PokemonComponent,\n        PokemonAbilitiesPipe,\n        PokemonFormComponent,\n    ],\n    imports        : [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        AngularFirestoreModule,\n        AngularFireModule.initializeApp(environment.configFirebase),\n        FormsModule,\n        MatModule,\n        LayoutModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n\n    ],\n    providers      : [AlbumsService, PokemonService, PokemonFirestoreService,\n        {\n            provide : MatDialogRef,\n            useValue: []\n        },\n        {\n            provide : MAT_DIALOG_DATA,\n            useValue: []\n        }],\n    bootstrap      : [AppComponent],\n    entryComponents: [FormComponent, PokemonFormComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AlbumsService } from '../../services/albums.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { FormComponent } from '../form/form.component';\n\n@Component({\n    selector   : 'app-album-list',\n    templateUrl: './album-list.component.html',\n    styleUrls  : ['./album-list.component.scss']\n})\nexport class AlbumListComponent implements OnInit {\n    displayedColumns: string[] = ['name', 'band', 'genre', 'label', 'producer', 'actions'];\n    dataSource                 = new MatTableDataSource();\n\n    constructor(\n        private albumService: AlbumsService,\n        private dialog: MatDialog) { }\n\n    ngOnInit(): void {\n        this.getData();\n    }\n\n    // get data from album service\n    getData() {\n        this.albumService.getAllAlbums().subscribe(res => this.dataSource.data = res);\n    }\n\n    // calling modal for create new album\n    newAlbum() {\n        this.openModal();\n        this.resetForm();\n        this.getData();\n    }\n\n    // calling modal for edit album\n    onEdit(element) {\n        this.openModal();\n        if (element) {\n            this.albumService.selected = element;\n        }\n    }\n\n    // delete album by id\n    onDelete(id: string) {\n        return this.albumService.deleteAlbum(id);\n    }\n\n    // modal\n    openModal(): void {\n        const dialogConfig     = new MatDialogConfig();\n        dialogConfig.data      = {\n            title: 'Modal'\n        };\n        dialogConfig.autoFocus = true;\n        this.dialog.open(FormComponent, dialogConfig);\n    }\n\n    resetForm(): void {\n        this.albumService.selected.name     = '';\n        this.albumService.selected.band     = '';\n        this.albumService.selected.producer = [];\n        this.albumService.selected.label    = [];\n        this.albumService.selected.genre    = [];\n        this.albumService.selected.id       = null;\n    }\n}\n","<div class=\"flex\">\n    <h1>Albums</h1>\n    <button (click)=\"newAlbum()\" color=\"accent\" mat-flat-button>\n        New\n        <mat-icon>save</mat-icon>\n    </button>\n</div>\n<table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table matSort>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"name\">\n        <th *matHeaderCellDef mat-header-cell>Name</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"band\">\n        <th *matHeaderCellDef mat-header-cell> Band</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.band}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"genre\">\n        <th *matHeaderCellDef mat-header-cell> Genre</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.genre}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"label\">\n        <th *matHeaderCellDef mat-header-cell> Label</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.label}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"producer\">\n        <th *matHeaderCellDef mat-header-cell> Producer</th>\n        <td *matCellDef=\"let element\" mat-cell> {{element.producer}} </td>\n    </ng-container>\n\n    <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n\n    <ng-container matColumnDef=\"actions\">\n        <th *matHeaderCellDef mat-header-cell>Actions</th>\n        <td *matCellDef=\"let element\" mat-cell>\n            <mat-icon (click)=\"onEdit(element)\" color=\"primary\">edit</mat-icon>\n            <mat-icon (click)=\"onDelete(element.id)\" color=\"warn\">delete</mat-icon>\n        </td>\n    </ng-container>\n\n\n</table>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { AlbumsService } from '../../services/albums.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector   : 'app-form',\n    templateUrl: './form.component.html',\n    styleUrls  : ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n    form: FormGroup;\n    visible                               = true;\n    selectable                            = true;\n    removable                             = true;\n    addOnBlur                             = true;\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n    constructor(\n        public album: AlbumsService,\n        private dialogRef: MatDialogRef<FormComponent>,\n        @Inject(MAT_DIALOG_DATA) data,\n        private fb: FormBuilder\n    ) {\n        this.form = this.fb.group({\n            name    : ['', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]],\n            band    : ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\n            genre   : this.fb.array([], [Validators.required]),\n            label   : this.fb.array([], [Validators.required]),\n            producer: this.fb.array([], [Validators.required])\n        });\n    }\n\n    // get data\n    get getName() {\n        return this.form.get('name');\n    }\n\n    get getBand() {\n        return this.form.get('band');\n    }\n\n    get getLabel(): FormArray {\n\n        return this.form.get('label') as FormArray;\n    }\n\n    get getGenre(): FormArray {\n        return this.form.get('genre') as FormArray;\n    }\n\n    get getProducer(): FormArray {\n        return this.form.get('producer') as FormArray;\n    }\n\n    ngOnInit(): void {\n        this.show();\n    }\n\n    // show values in input\n    show() {\n        this.form.patchValue(this.album.selected);\n        this.album.selected.label.forEach(e => {\n            this.getLabel.push(this.fb.control(e));\n        });\n        this.album.selected.genre.forEach(e => {\n            this.getGenre.push(this.fb.control(e));\n        });\n        this.album.selected.producer.forEach(e => {\n            this.getProducer.push(this.fb.control(e));\n        });\n    }\n\n    onSubmit(event: Event) {\n        event.preventDefault();\n        if (this.form.valid) {\n            this.form.reset();\n        }\n    }\n\n    // add label or quit\n    addLabel(event: MatChipInputEvent): void {\n        const inputLabel = event.input;\n        const valueLabel = event.value;\n\n        // Add our requirement\n        if ((valueLabel || '').trim()) {\n\n            this.getLabel.push(new FormControl(this.fb.control(valueLabel.trim())));\n        }\n\n        // Reset the input value\n        if (inputLabel) {\n            inputLabel.value = '';\n        }\n    }\n\n    // add genre or quit\n    addGenre(event: MatChipInputEvent): void {\n        const inputGenre = event.input;\n        const valueGenre = event.value;\n\n        // Add our requirement\n        if ((valueGenre || '').trim()) {\n\n            this.getGenre.push(this.fb.control(valueGenre.trim()));\n        }\n\n        // Reset the input value\n        if (inputGenre) {\n            inputGenre.value = '';\n        }\n    }\n\n    addProducer(event: MatChipInputEvent): void {\n        const inputProducer = event.input;\n        const valueProducer = event.value;\n\n        // Add our requirement\n        if ((valueProducer || '').trim()) {\n\n            this.getProducer.push(this.fb.control(valueProducer.trim()));\n        }\n\n        // Reset the input value\n        if (inputProducer) {\n            inputProducer.value = '';\n        }\n    }\n\n    // remove by index\n    removeLabel(index: number): void {\n        this.getLabel.removeAt(index);\n    }\n\n    removeGenre(index: number): void {\n        this.getGenre.removeAt(index);\n    }\n\n    removeProducer(index: number): void {\n        this.getProducer.removeAt(index);\n    }\n\n    // check errors\n    public hasError = (controlName: string, errorName: string) => {\n        return this.form.controls[controlName].hasError(errorName);\n    }\n\n    // save form if album not in collection add if it is edit\n    onSAveForm() {\n        if (this.album.selected.id === null) {\n            const newAlbum = {\n                name    : this.getName.value,\n                band    : this.getBand.value,\n                label   : this.getLabel.value,\n                genre   : this.getGenre.value,\n                producer: this.getProducer.value\n            };\n            this.album.addAlbum(newAlbum);\n        } else {\n            const editedAlbum = {\n                id      : this.album.selected.id,\n                name    : this.getName.value,\n                band    : this.getBand.value,\n                label   : this.getLabel.value,\n                genre   : this.getGenre.value,\n                producer: this.getProducer.value\n            };\n            this.album.editAlbum(editedAlbum);\n        }\n        this.close();\n    }\n\n    close(): void {\n        this.form.markAsPristine();\n        this.form.markAsUntouched();\n        this.dialogRef.close();\n    }\n}\n","<div class=\"container\">\n    <form (ngSubmit)=\"onSubmit($event)\" [formGroup]=\"form\" novalidate>\n        <mat-form-field>\n            <input formControlName=\"name\"\n                   id=\"name\"\n                   matInput\n                   placeholder=\"Name\"\n                   type=\"text\">\n            <mat-hint align=\"end\">Not more then 30 characters long</mat-hint>\n            <mat-error *ngIf=\"hasError('name', 'required')\">Name is required</mat-error>\n            <mat-error *ngIf=\"hasError('name', 'maxlength')\">You have more than 30 characters</mat-error>\n            <mat-error *ngIf=\"hasError('name', 'minlength')\">You have les than 3 characters</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input\n                formControlName=\"band\"\n                id=\"band\"\n                matInput\n                placeholder=\"Band\"\n                type=\"text\">\n            <mat-hint align=\"end\">Not more then 30 characters long</mat-hint>\n            <mat-error *ngIf=\"hasError('band', 'required')\">Band is required</mat-error>\n            <mat-error *ngIf=\"hasError('band', 'maxlength')\">You have more than 20 characters</mat-error>\n            <mat-error *ngIf=\"hasError('band', 'minlength')\">You have les than 3 characters</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-chip-list #label>\n                <mat-chip (removed)=\"removeLabel(i)\" *ngFor=\"let labels of getLabel.controls; let i = index;\"\n                          [removable]=\"removable\" [selectable]=\"selectable\">\n                    {{labels.value}}\n                    <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                </mat-chip>\n                <input (matChipInputTokenEnd)=\"addLabel($event)\"\n                       [matChipInputAddOnBlur]=\"addOnBlur\"\n                       [matChipInputFor]=\"label\"\n                       [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                       placeholder=\"New Label\"/>\n                <mat-error *ngIf=\"hasError('label', 'required')\">At least one is required</mat-error>\n\n            </mat-chip-list>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-chip-list #genre>\n                <mat-chip (removed)=\"removeGenre(i)\" *ngFor=\"let genre of getGenre.controls; let i = index;\"\n                          [removable]=\"removable\" [selectable]=\"selectable\">\n                    {{genre.value}}\n                    <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                </mat-chip>\n                <input (matChipInputTokenEnd)=\"addGenre($event)\"\n                       [matChipInputAddOnBlur]=\"addOnBlur\"\n                       [matChipInputFor]=\"genre\"\n                       [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                       placeholder=\"New Genre\"\n                />\n                <mat-error *ngIf=\"hasError('genre', 'required')\">At least one is required</mat-error>\n            </mat-chip-list>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-chip-list #producer>\n                <mat-chip (removed)=\"removeProducer(i)\" *ngFor=\"let producer of getProducer.controls; let i = index;\"\n                          [removable]=\"removable\" [selectable]=\"selectable\">\n                    {{producer.value}}\n                    <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                </mat-chip>\n                <input (matChipInputTokenEnd)=\"addProducer($event)\"\n                       [matChipInputAddOnBlur]=\"addOnBlur\"\n                       [matChipInputFor]=\"producer\"\n                       [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                       placeholder=\"New Producer\"/>\n                <mat-error *ngIf=\"hasError('producer', 'required')\">At least one is required</mat-error>\n            </mat-chip-list>\n        </mat-form-field>\n        <button (click)=\"close()\"\n                color=\"warn\"\n                mat-button\n                type=\"button\">\n            CancelL\n        </button>\n        <button (click)=\"onSAveForm();\n                onSubmit($event)\"\n                [disabled]=\"form.invalid\"\n                color=\"primary\"\n                mat-button>\n            Save\n        </button>\n\n    </form>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { PokemonFirestoreService } from '../../services/pokemon-firestore.service';\n\n@Component({\n    selector   : 'app-pokemon-form',\n    templateUrl: './pokemon-form.component.html',\n    styleUrls  : ['./pokemon-form.component.scss']\n})\nexport class PokemonFormComponent implements OnInit {\n\n    pokemonForm: FormGroup;\n    visible                               = true;\n    selectable                            = true;\n    removable                             = true;\n    addOnBlur                             = true;\n    readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n    constructor(\n        public pokemon: PokemonFirestoreService,\n        private dialogRef: MatDialogRef<PokemonFormComponent>,\n        @Inject(MAT_DIALOG_DATA) data,\n        private fbp: FormBuilder\n    ) {\n        this.pokemonForm = this.fbp.group({\n            name     : ['', [Validators.required, Validators.minLength(3), Validators.maxLength(12)]],\n            image    : ['', [Validators.required, Validators.pattern(\n                '^https?://(?:[a-z0-9\\\\-]+\\\\.)+[a-z]{2,6}(?:/[^/#?]+)+\\\\.(?:jpg|gif|png)$')]],\n            height   : ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n            weight   : ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n            abilities: this.fbp.array([], [Validators.required])\n\n        });\n    }\n\n    // Get data\n    get getName() {\n        return this.pokemonForm.get('name');\n    }\n\n    get getImage() {\n        return this.pokemonForm.get('image');\n    }\n\n    get getWeight() {\n        return this.pokemonForm.get('weight');\n    }\n\n    get getIHeight() {\n        return this.pokemonForm.get('height');\n    }\n\n    get getAbilities(): FormArray {\n        return this.pokemonForm.get('abilities') as FormArray;\n    }\n\n    ngOnInit(): void {\n        this.show();\n    }\n\n    // show data in inputs\n    show() {\n        this.pokemonForm.patchValue(this.pokemon.selectedPokemon);\n        this.pokemon.selectedPokemon.abilities.forEach(e => {\n            this.getAbilities.push(this.fbp.control(e));\n        });\n\n    }\n\n    onSubmitPokemon(event: Event) {\n        event.preventDefault();\n        if (this.pokemonForm.valid) {\n            this.pokemonForm.reset();\n        }\n    }\n\n    // check errors\n    public hasError = (controlName: string, errorName: string) => {\n        return this.pokemonForm.controls[controlName].hasError(errorName);\n    };\n\n    // add ability or clear\n    addAbility(event: MatChipInputEvent): void {\n        const input = event.input;\n        const value = event.value;\n        if ((value || '').trim()) {\n\n            this.getAbilities.push(this.fbp.control(value.trim()));\n        }\n\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    // remove ability at index\n    removeAbility(index: number): void {\n\n        if (index >= 0) {\n            this.getAbilities.removeAt(index);\n\n        }\n    }\n\n    // set values\n    onSAveForm() {\n        if (this.pokemon.selectedPokemon.id == null) {\n            const newPokemon = {\n                name     : this.getName.value,\n                image    : this.getImage.value,\n                height   : this.getIHeight.value,\n                abilities: this.getAbilities.value,\n                weight   : this.getWeight.value\n            };\n            this.pokemon.addPokemon(newPokemon);\n        } else {\n            const editedPokemon = {\n                id       : this.pokemon.selectedPokemon.id,\n                name     : this.getName.value,\n                image    : this.getImage.value,\n                abilities: this.getAbilities.value,\n                height   : this.getIHeight.value,\n                weight   : this.getWeight.value\n            };\n            this.pokemon.editPokemon(editedPokemon);\n\n        }\n        this.close();\n    }\n\n    close(): void {\n        this.pokemonForm.markAsPristine();\n        this.pokemonForm.markAsUntouched();\n        this.dialogRef.close();\n    }\n\n}\n","<div class=\"container\">\n    <form (ngSubmit)=\"onSubmitPokemon($event)\" [formGroup]=\"pokemonForm\" novalidate>\n        <mat-form-field>\n            <input formControlName=\"name\"\n                   id=\"name\"\n                   matInput\n                   placeholder=\"Name\"\n                   type=\"text\">\n            <mat-hint align=\"end\">Not more then 12 characters long</mat-hint>\n            <mat-error *ngIf=\"hasError('name', 'required')\">Name is required</mat-error>\n            <mat-error *ngIf=\"hasError('name', 'maxlength')\">You have more than 12 characters</mat-error>\n            <mat-error *ngIf=\"hasError('name', 'minlength')\">You have les than 3 characters</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input formControlName=\"height\"\n                   id=\"height\"\n                   matInput\n                   placeholder=\"Height\"\n                   type=\"text\">\n            <mat-hint align=\"end\">Please enter a number</mat-hint>\n            <mat-error *ngIf=\"hasError('height', 'required')\">Height is required</mat-error>\n            <mat-error *ngIf=\"hasError('height', 'pattern')\">Height is a number</mat-error>\n\n        </mat-form-field>\n        <mat-form-field>\n            <input formControlName=\"weight\" id=\"weight\" matInput placeholder=\"Weight\" type=\"text\">\n            <mat-hint align=\"end\">Please enter a number</mat-hint>\n            <mat-error *ngIf=\"hasError('weight', 'required')\">Weight is required</mat-error>\n            <mat-error *ngIf=\"hasError('weight', 'pattern')\">Weight is a number</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input formControlName=\"image\" id=\"image\" matInput placeholder=\"Link to img\" type=\"text\">\n            <mat-hint align=\"end\">Please enter a valid link</mat-hint>\n            <mat-error *ngIf=\"hasError('image', 'required')\">Link is required</mat-error>\n            <mat-error *ngIf=\"hasError('image', 'pattern')\">This link is invalid</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-chip-list #ability>\n                <mat-chip (removed)=\"removeAbility(i)\" *ngFor=\"let ability of getAbilities.controls ; let i = index;\"\n                          [removable]=\"removable\" [selectable]=\"selectable\">\n                    {{ability.value }}\n                    <mat-icon *ngIf=\"removable\" matChipRemove>cancel</mat-icon>\n                </mat-chip>\n                <input (matChipInputTokenEnd)=\"addAbility($event)\"\n                       [matChipInputAddOnBlur]=\"addOnBlur\"\n                       [matChipInputFor]=\"ability\"\n                       [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                       placeholder=\"New Ability\"/>\n                <mat-error *ngIf=\"hasError('abilities', 'required')\">At least one is required</mat-error>\n            </mat-chip-list>\n        </mat-form-field>\n\n        <button (click)=\"close()\"\n                color=\"warn\"\n                mat-button\n                type=\"button\">\n            Cancel\n        </button>\n        <button (click)=\"onSAveForm();\n                onSubmitPokemon($event) \"\n                [disabled]=\"pokemonForm.invalid\"\n                color=\"primary\"\n                mat-button\n                type=\"submit\">\n            Save\n        </button>\n\n    </form>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PokemonService } from 'src/app/services/pokemon.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { PokemonFirestoreService } from '../../services/pokemon-firestore.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { PokemonFormComponent } from '../pokemon-form/pokemon-form.component';\n\n@Component({\n    selector   : 'app-pokemon',\n    templateUrl: './pokemon.component.html',\n    styleUrls  : ['./pokemon.component.scss']\n})\nexport class PokemonComponent implements OnInit {\n    // Showing columns\n    displayedColumns: string[] = ['name', 'image', 'abilities', 'weight', 'height', 'actions'];\n    dataSource                 = new MatTableDataSource();\n    // data: any[] = [];\n\n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n    constructor(private pokemonService: PokemonService, private router: Router,\n                private pokemonFirestoreService: PokemonFirestoreService,\n                public pokemon: PokemonFirestoreService,\n                private dialog: MatDialog) { }\n\n    ngOnInit(): void {\n        this.getData();\n        this.dataSource.paginator = this.paginator;\n        // !!!!!!!!   1 time used to get pokemons and push it to firebase\n        // this.getPokemons()\n\n    }\n\n    // !!!!!!!!   1 time used to get pokemons and push it to firebase\n    // getPokemons() {\n    //     for (let i = 1; i <= 50; i++) {\n    //         this.pokemonService.getPokemons(i).subscribe(\n    //             res => {\n    //                 this.pokemon.addPokemon({\n    //                     image    : res.sprites.front_default,\n    //                     name     : res.name,\n    //                     abilities: res.abilities.map(a => a.ability.name),\n    //                     weight   : res.weight,\n    //                     height   : res.height\n    //                 });\n    //             },\n    //             err => {\n    //                 console.log(err);\n    //             }\n    //         );\n    //     }\n    // }\n    // Get data from firestore\n    getData() {\n        this.pokemonFirestoreService.getAllPokemons()\n            .subscribe(res => {\n                this.dataSource.data = res;\n            });\n    }\n\n    // Open modal and delete all data to get clear inputs\n    newPokemon() {\n        this.openModal();\n        this.resetPokemonForm();\n        this.getData();\n\n    }\n\n    // Opening modal and put there selected pokemon\n    onEdit(element) {\n        this.openModal();\n        if (element) {\n            this.pokemonFirestoreService.selectedPokemon = element;\n\n        }\n\n    }\n\n    // Deleting pokemon by id\n    onDelete(id: string) {\n        return this.pokemonFirestoreService.deletePokemon(id);\n    }\n\n    // Open modal\n    openModal(): void {\n        const dialogConfig     = new MatDialogConfig();\n        dialogConfig.data      = {\n            title: 'Modal'\n        };\n        dialogConfig.autoFocus = true;\n        this.dialog.open(PokemonFormComponent, dialogConfig);\n    }\n\n    // Reset form\n    resetPokemonForm(): void {\n        this.pokemonFirestoreService.selectedPokemon.name      = '';\n        this.pokemonFirestoreService.selectedPokemon.height    = null;\n        this.pokemonFirestoreService.selectedPokemon.weight    = null;\n        this.pokemonFirestoreService.selectedPokemon.image     = '';\n        this.pokemonFirestoreService.selectedPokemon.abilities = [];\n        this.pokemonFirestoreService.selectedPokemon.id        = null;\n    }\n\n    // Filter for pagination\n    applyFilter(event: Event) {\n        const filterValue      = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"filter\">\n        <mat-form-field>\n            <mat-label>Filter</mat-label>\n            <input #input (keyup)=\"applyFilter($event)\" matInput>\n        </mat-form-field>\n    </div>\n    <table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" mat-table>\n        <ng-container matColumnDef=\"new\">\n            <th *matHeaderCellDef mat-header-cell>name</th>\n\n        </ng-container>\n        <ng-container matColumnDef=\"name\">\n            <th *matHeaderCellDef mat-header-cell>name</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.name}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"image\">\n            <th *matHeaderCellDef mat-header-cell> Image</th>\n            <td *matCellDef=\"let element\" mat-cell>\n                <img alt=\"pokemon\" height=\"100\" src=\"{{element.image}}\" width=\"100\">\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"abilities\">\n            <th *matHeaderCellDef mat-header-cell >abilities</th>\n            <td *matCellDef=\"let element\" mat-cell>\n                {{element.abilities }}\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"weight\">\n            <th *matHeaderCellDef mat-header-cell>weight</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.weight}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"height\">\n            <th *matHeaderCellDef mat-header-cell>height</th>\n            <td *matCellDef=\"let element\" mat-cell> {{element.height}} </td>\n        </ng-container>\n        <tr *matHeaderRowDef=\"displayedColumns\" mat-header-row></tr>\n        <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n\n        <ng-container matColumnDef=\"actions\">\n            <th *matHeaderCellDef mat-header-cell>Actions</th>\n            <td *matCellDef=\"let element\" mat-cell>\n                <mat-icon (click)=\"onEdit(element)\" color=\"primary\">edit</mat-icon>\n                <mat-icon (click)=\"onDelete(element.id)\" color=\"accent\">delete</mat-icon>\n                <mat-icon (click)=\"newPokemon()\" color=\"accent\">add_box</mat-icon>\n            </td>\n        </ng-container>\n        <tr *matNoDataRow class=\"mat-row\">\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ClipboardModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        OverlayModule,\n        PortalModule,\n    ],\n\n    exports: [\n        CommonModule,\n        ClipboardModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        OverlayModule,\n        PortalModule\n    ]\n})\n\nexport class MatModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pokemonAbilities'\n})\nexport class PokemonAbilitiesPipe implements PipeTransform {\n\n  transform(abilities: any[]): string {\n    return (abilities || []).map(a => a.ability.name).join(', ');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AlbumI } from '../models/album.interface';\n\nexport interface AlbumId extends AlbumI {\n    id: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlbumsService {\n    albums: Observable<AlbumId[]>;\n    public selected = {\n        id      : null,\n        name    : '',\n        band    : '',\n        genre   : [],\n        label   : [],\n        producer: []\n    };\n    private albumCollection: AngularFirestoreCollection<AlbumI>;\n\n    constructor(private readonly afs: AngularFirestore) {\n        this.albumCollection = afs.collection<AlbumI>('albums');\n        this.albums          = this.albumCollection.snapshotChanges().pipe(\n            map(action => action.map(a => {\n                const data = a.payload.doc.data() as AlbumI;\n                const id   = a.payload.doc.id;\n                return {id, ...data};\n            }))\n        );\n    }\n\n    getAllAlbums() {\n        return this.albums;\n    }\n\n    editAlbum(album: AlbumId) {\n        console.log(album);\n\n        return this.albumCollection.doc(album.id).update(album);\n    }\n\n    deleteAlbum(id: string) {\n        return this.albumCollection.doc(id).delete();\n    }\n\n    addAlbum(album: { name: string; band: string; label: any[]; genre: any[]; producer: any[]; }) {\n\n        return this.albumCollection.add(album);\n\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { map } from 'rxjs/operators';\nimport { PokemonI } from '../models/pokemon.interface';\n\nexport interface PokemonId extends PokemonI {\n    id: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PokemonFirestoreService {\n    pokemons: Observable<PokemonId[]>;\n    public selectedPokemon = {\n        id       : null,\n        height   : null,\n        weight   : null,\n        image    : '',\n        name     : '',\n        abilities: []\n    };\n    private pokemonCollection: AngularFirestoreCollection<PokemonI>;\n\n    // get pokemons from firestore\n    constructor(private readonly afsPokemon: AngularFirestore) {\n        this.pokemonCollection = afsPokemon.collection<PokemonI>('pokemons');\n        this.pokemons          = this.pokemonCollection.snapshotChanges().pipe(\n            map(action => action.map(a => {\n                const data = a.payload.doc.data() as PokemonI;\n                const id   = a.payload.doc.id;\n                return {id, ...data};\n\n            }))\n        );\n    }\n\n    getAllPokemons() {\n        return this.pokemons;\n    }\n\n    // edit pokemon by id and update it in firebase\n    editPokemon(pokemon: PokemonId) {\n        return this.pokemonCollection.doc(pokemon.id).update(pokemon);\n    }\n\n    // delete pokemon by id\n    deletePokemon(id: string) {\n        return this.pokemonCollection.doc(id).delete();\n    }\n\n    // add pokemon to firestore\n    addPokemon(pokemon: { abilities: []; image: string; name: string; weight: number; height: number; }) {\n        return this.pokemonCollection.add(pokemon);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PokemonService {\n\n    baseUrl: string = environment.baseUrl;\n\n    constructor(private http: HttpClient) { }\n\n    // get pokemons\n    getPokemons(index) {\n        return this.http.get<any>(`${this.baseUrl}/pokemon/${index}`);\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production    : false,\n    configFirebase: {\n        apiKey           : 'AIzaSyDJiClaLsdwGOPkrMDLD55c_YavoGHHRUw',\n        authDomain       : 'homework-5-e962d.firebaseapp.com',\n        databaseURL      : 'https://homework-5-e962d.firebaseio.com',\n        projectId        : 'homework-5-e962d',\n        storageBucket    : 'homework-5-e962d.appspot.com',\n        messagingSenderId: '127909762244',\n        appId            : '1:127909762244:web:e6a8753acdfef4c30d6591',\n        measurementId    : 'G-F53ECEZ25T'\n    },\n    baseUrl       : 'https://pokeapi.co/api/v2'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}